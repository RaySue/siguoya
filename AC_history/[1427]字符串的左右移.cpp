//ÁªôÂÆö‰∏Ä‰∏™ÂåÖÂê´Â∞èÂÜôËã±ÊñáÂ≠óÊØçÁöÑÂ≠óÁ¨¶‰∏≤ s ‰ª•Âèä‰∏Ä‰∏™Áü©Èòµ shiftÔºåÂÖ∂‰∏≠ shift[i] = [direction, amount]Ôºö 
//
// 
// direction ÂèØ‰ª•‰∏∫ 0 ÔºàË°®Á§∫Â∑¶ÁßªÔºâÊàñ 1 ÔºàË°®Á§∫Âè≥ÁßªÔºâ„ÄÇ 
// amount Ë°®Á§∫ s Â∑¶Âè≥ÁßªÁöÑ‰ΩçÊï∞„ÄÇ 
// Â∑¶Áßª 1 ‰ΩçË°®Á§∫ÁßªÈô§ s ÁöÑÁ¨¨‰∏Ä‰∏™Â≠óÁ¨¶ÔºåÂπ∂Â∞ÜËØ•Â≠óÁ¨¶ÊèíÂÖ•Âà∞ s ÁöÑÁªìÂ∞æ„ÄÇ 
// Á±ª‰ººÂú∞ÔºåÂè≥Áßª 1 ‰ΩçË°®Á§∫ÁßªÈô§ s ÁöÑÊúÄÂêé‰∏Ä‰∏™Â≠óÁ¨¶ÔºåÂπ∂Â∞ÜËØ•Â≠óÁ¨¶ÊèíÂÖ•Âà∞ s ÁöÑÂºÄÂ§¥„ÄÇ 
// 
//
// ÂØπËøô‰∏™Â≠óÁ¨¶‰∏≤ËøõË°åÊâÄÊúâÊìç‰ΩúÂêéÔºåËøîÂõûÊúÄÁªàÁªìÊûú„ÄÇ 
//
// 
//
// Á§∫‰æã 1Ôºö 
//
// 
//ËæìÂÖ•Ôºös = "abc", shift = [[0,1],[1,2]]
//ËæìÂá∫Ôºö"cab"
//Ëß£ÈáäÔºö
//[0,1] Ë°®Á§∫Â∑¶Áßª 1 ‰Ωç„ÄÇ "abc" -> "bca"
//[1,2] Ë°®Á§∫Âè≥Áßª 2 ‰Ωç„ÄÇ "bca" -> "cab" 
//
// Á§∫‰æã 2Ôºö 
//
// 
//ËæìÂÖ•Ôºös = "abcdefg", shift = [[1,1],[1,1],[0,2],[1,3]]
//ËæìÂá∫Ôºö"efgabcd"
//Ëß£ÈáäÔºö 
//[1,1] Ë°®Á§∫Âè≥Áßª 1 ‰Ωç„ÄÇ "abcdefg" -> "gabcdef"
//[1,1] Ë°®Á§∫Âè≥Áßª 1 ‰Ωç„ÄÇ "gabcdef" -> "fgabcde"
//[0,2] Ë°®Á§∫Â∑¶Áßª 2 ‰Ωç„ÄÇ "fgabcde" -> "abcdefg"
//[1,3] Ë°®Á§∫Âè≥Áßª 3 ‰Ωç„ÄÇ "abcdefg" -> "efgabcd" 
//
// 
//
// ÊèêÁ§∫Ôºö 
//
// 
// 1 <= s.length <= 100 
// s Âè™ÂåÖÂê´Â∞èÂÜôËã±ÊñáÂ≠óÊØç 
// 1 <= shift.length <= 100 
// shift[i].length == 2 
// 0 <= shift[i][0] <= 1 
// 0 <= shift[i][1] <= 100 
// 
// Related Topics Êï∞ÁªÑ Êï∞Â≠¶ 
// üëç 6 üëé 0


//leetcode submit region begin(Prohibit modification and deletion)
class Solution
{
public:
    // ÂèØ‰ª•‰ΩøÁî®ÂèåÁ´ØÈòüÂàó


    // ÂÖàÁ¥ØËÆ°ËÆ°ÁÆóshiftÔºåÂú®ÁßªÂä®
    string stringShift(string s, vector <vector<int>> &shift)
    {
        if (s.empty()) return s;
        string ans = "";
        int shiftDirect = 0;
        for (vector<int> oneShift : shift)
        {
            if (oneShift[0] == 0)
            {
                shiftDirect -= oneShift[1];
            } else
            {
                shiftDirect += oneShift[1];
            }
        }
        if (shiftDirect == 0) return s;
        // Âè≥ÁßªÂä®
        if (shiftDirect > 0)
        {
            shiftDirect %= s.size();
            for (int i = s.size() - shiftDirect; i < s.size(); ++i)
            {
                ans.push_back(s[i]);
            }
            for (int i = 0; i < s.size() - shiftDirect; ++i)
            {
                ans.push_back(s[i]);
            }
        } else
        {  // Â∑¶ÁßªÂä®
            shiftDirect = -shiftDirect;
            shiftDirect %= s.size();
            for (int i = shiftDirect; i < s.size(); ++i)
            {
                ans.push_back(s[i]);
            }
            for (int i = 0; i < shiftDirect; ++i)
            {
                ans.push_back(s[i]);
            }
        }
        return ans;
    }

    // Êää s ÂºÑÊàê‰∏â‰ªΩÔºå Êñπ‰æøÁßªÂä®Ôºå Êà™ÂèñÂ≠ê‰∏≤Âç≥ÂèØ
    string stringShift(string s, vector <vector<int>> &shift)
    {
        int shiftindex = 0;
        for (int i = 0; i < shift.size(); ++i)
        {
            if (shift[i][0] == 0)
            {
                shiftindex -= shift[i][1];
            } else
            {
                shiftindex += shift[i][1];
            }
        }
        if (shiftindex >= 0)
        {
            shiftindex %= shift.size();
        } else
        {
            shiftindex = -(-shiftindex % shift.size());
        }
        string tmp = s + s + s;
        string ans = tmp.substr(s.size() - shiftindex, s.size());
        return ans;
    }
};
//leetcode submit region end(Prohibit modification and deletion)
